/*
 * To change this license header, choose License Headers in Project Properties * and open the template in the editor.
 */
package UserInterface.PatientRole;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Enterprise.NGOEnterprise;
import Business.Network.Network;
import Business.Organization.CustomerOrganization;
import Business.Organization.ManagerOrganization;
import Business.Organization.Organization;
import Business.Organization.PatientOrganization;
//import Business.Patient.*;
import Business.Person.Person;
import Business.Role.AdminRole;
import Business.Role.CustomerRole;
import Business.Role.PatientRole;
import Business.UserAccount.UserAccount;
import Business.Validation.Validation;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 * .
 * To change this template file, choose Tools | Templates
 *
 * @author Shah
 */
public class RegistrationJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RegistrationJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem system;

    public RegistrationJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.system = system;
        this.userProcessContainer = userProcessContainer;
        populateServices();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        textFirstName = new javax.swing.JTextField();
        textLastName = new javax.swing.JTextField();
        textAge = new javax.swing.JTextField();
        comboEnterprise = new javax.swing.JComboBox();
        btnRegister = new javax.swing.JButton();
        comboGender = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        textUserName = new javax.swing.JTextField();
        textPassword = new javax.swing.JPasswordField();
        btncancel = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        comboService = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("First Name:");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setText("Last Name:");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setText("Age:");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setText("Gender:");

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setText("Select Hospital:");

        comboEnterprise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEnterpriseActionPerformed(evt);
            }
        });

        btnRegister.setBackground(new java.awt.Color(0, 153, 255));
        btnRegister.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnRegister.setForeground(new java.awt.Color(255, 255, 255));
        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        comboGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "TransGender" }));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setText("User Name:");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel8.setText("Password:");

        btncancel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btncancel.setText("Cancel");
        btncancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel9.setText("Services:");

        comboService.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboServiceActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(51, 153, 255));
        jPanel1.setForeground(new java.awt.Color(51, 153, 255));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Registration Form");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(481, 481, 481)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel1)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()

                .addGap(441, 441, 441)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btncancel, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(btnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textFirstName)
                            .addComponent(textLastName)
                            .addComponent(textAge)
                            .addComponent(comboGender, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboService, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboEnterprise, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textUserName)
                            .addComponent(textPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(450, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()

                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboService, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(comboEnterprise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(textUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(textPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))

                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegister)
                    .addComponent(btncancel))
                .addContainerGap(137, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed

        try {
            String username = textUserName.getText();
            String password = String.valueOf(textPassword.getPassword());

            Validation v = new Validation();

            if (v.checkEmpty(textFirstName.getText()) || v.checkEmpty(textLastName.getText()) || v.checkEmpty(textAge.getText()) || v.checkEmpty(textUserName.getText()) || v.checkEmpty(textPassword.getText())) {
                JOptionPane.showMessageDialog(null, "Fields cannot be empty");
                return;
            }

            boolean a = v.regexTextCheck(textFirstName.getText());
            boolean b = v.regexTextCheck(textLastName.getText());
            boolean c = v.regexMedicineQty(textAge.getText());
            boolean d = v.regexUser(username);
            boolean e = v.regexUser(password);

            if (!a) {
                JOptionPane.showMessageDialog(null, "First Name cannot be empty and enter alphabetically");
                return;
            } else {
                if (!b) {
                    JOptionPane.showMessageDialog(null, "Last Name cannot be empty and enter alphabetically");
                    return;
                } else {
                    if (!c) {
                        JOptionPane.showMessageDialog(null, "Please enter Age Numberically");
                        return;
                    } else {
                        if (!d) {
                            JOptionPane.showMessageDialog(null, "Please Enter correct Username and atleast 6 digit is required");
                            return;
                        } else {
                            if (!e) {
                                JOptionPane.showMessageDialog(null, "Please Enter correct Password and atleast 6 digit is required");
                                return;
                            } else {
                                Enterprise enterprise = (Enterprise) comboEnterprise.getSelectedItem();
                                Network network = (Network) comboService.getSelectedItem();

//                            if (username.trim().equalsIgnoreCase("") || password.trim().equalsIgnoreCase("")) {
//                                JOptionPane.showMessageDialog(null, "Please Enter Valid Name!");
//
//                            } else {
                                for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                                    if (org instanceof PatientOrganization) {
                                        //UserAccountDirectory uad = new UserAccountDirectory();
                                        boolean uadd = org.getUserAccountList().checkIfUsernameIsUnique(username);
                                        if (uadd) {
                                            JOptionPane.showMessageDialog(null, " Username already exist");
                                        } else {

                                            Person person = new Person();
                                            person.setAge(Integer.parseInt(textAge.getText()));
                                            person.setFirstName(textFirstName.getText());
                                            person.setLastName(textLastName.getText());
                                            person.setGender(String.valueOf(comboGender.getSelectedItem()));
                                            org.getPersonList().createPerson(person);

                                            UserAccount ua = org.getUserAccountList().createUserAccount(textUserName.getText(), String.valueOf(textPassword.getPassword()), person, new PatientRole());

                                            JOptionPane.showMessageDialog(null, "Patient has been registered");
                                            break;
                                        }

                                    } else if (org instanceof CustomerOrganization) {

                                        //UserAccountDirectory uad = new UserAccountDirectory();
                                        boolean uadd = org.getUserAccountList().checkIfUsernameIsUnique(username);
                                        if (uadd) {
                                            JOptionPane.showMessageDialog(null, " Username already exist");
                                        } else {
                                            Person person = new Person();

                                            person.setAge(Integer.parseInt(textAge.getText()));
                                            person.setFirstName(textFirstName.getText());
                                            person.setLastName(textLastName.getText());
                                            person.setGender(String.valueOf(comboGender.getSelectedItem()));
                                            org.getPersonList().createPerson(person);

                                            UserAccount ua = org.getUserAccountList().createUserAccount(textUserName.getText(), String.valueOf(textPassword.getPassword()), person, new CustomerRole());

                                            JOptionPane.showMessageDialog(null, "Customer has been registered");
                                            break;
                                        }
                                    }
                                }

                            }
                        }
                    }
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Please enter all details correctly");
        }

    }//GEN-LAST:event_btnRegisterActionPerformed

    private void comboEnterpriseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEnterpriseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboEnterpriseActionPerformed

    private void comboServiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboServiceActionPerformed
        // TODO add your handling code here:

        String comb = String.valueOf(comboService.getSelectedItem());
        if (comb != null) {
            populateComboBox(comb);
        }

    }//GEN-LAST:event_comboServiceActionPerformed

    private void btncancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelActionPerformed
        // TODO add your handling code here:
        textFirstName.setText("");
        textLastName.setText("");
        textAge.setText("");
        textPassword.setText("");
        textUserName.setText("");


    }//GEN-LAST:event_btncancelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegister;
    private javax.swing.JButton btncancel;
    private javax.swing.JComboBox comboEnterprise;
    private javax.swing.JComboBox<String> comboGender;
    private javax.swing.JComboBox comboService;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField textAge;
    private javax.swing.JTextField textFirstName;
    private javax.swing.JTextField textLastName;
    private javax.swing.JPasswordField textPassword;
    private javax.swing.JTextField textUserName;
    // End of variables declaration//GEN-END:variables

    private void populateComboBox(String comb) {
        comboEnterprise.removeAllItems();
        for (Network network : system.getNetworkList()) {
//            String comb = String.valueOf(comboService.getSelectedItem());
//            System.out.println(comb);
            if (network.getName().equalsIgnoreCase(comb)) {
                for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
//                    System.out.println(enterprise);
                    comboEnterprise.addItem(enterprise);
                }
            }
        }
    }

    private void populateServices() {
//        comboService
        comboService.removeAllItems();
        for (Network network : system.getNetworkList()) {
            System.out.println(network);
            comboService.addItem(network);
//            if(network.getName().equalsIgnoreCase("hospital") || network.getName().equalsIgnoreCase("ngo"))
//            {
//                comboService.addItem(network);
//            }
        }

    }

}
