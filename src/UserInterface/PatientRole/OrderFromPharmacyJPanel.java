/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.PatientRole;

import Business.Enterprise.Enterprise;
import Business.Inventory.InventoryItem;
import Business.Medicine.Medicine;
import Business.Medicine.MedicineDirectory;
import Business.Network.Network;
import Business.UserAccount.UserAccount;
import Business.Validation.Validation;
import UserInterface.MainJFrame;
import java.awt.CardLayout;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Shah
 */
public class OrderFromPharmacyJPanel extends javax.swing.JPanel {

    /**
     * Creates new form OrderFromPharmacy
     */
    private JPanel container;
    private Enterprise enterprise;
    private Network network;
    private UserAccount userAccount;
//    private MedicineDirectory medicineList;

    OrderFromPharmacyJPanel(JPanel container, Enterprise enterprise, UserAccount userAccount, Network network) {
        initComponents();
        this.container = container;
        this.enterprise = enterprise;
        this.network = network;
        this.userAccount = userAccount;
//        medicineList = new MedicineDirectory();

        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableMedicineList = new javax.swing.JTable();
        orderMedBtn = new javax.swing.JButton();
        orderMedTxt = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Order From Pharmacy");

        tableMedicineList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine Name", "Quantity", "Expiry Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableMedicineList);

        orderMedBtn.setText("Order Medicine");
        orderMedBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderMedBtnActionPerformed(evt);
            }
        });

        orderMedTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderMedTxtActionPerformed(evt);
            }
        });

        btnBack.setText("<< Back Button");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel2.setText("Quantity:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(379, 379, 379)
                        .addComponent(jLabel2)
                        .addGap(31, 31, 31)
                        .addComponent(orderMedTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(orderMedBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(239, 239, 239)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(421, 421, 421)
                        .addComponent(jLabel1)))
                .addContainerGap(254, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(btnBack)
                .addGap(45, 45, 45)
                .addComponent(jLabel1)
                .addGap(58, 58, 58)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(orderMedTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(orderMedBtn)
                    .addComponent(jLabel2))
                .addContainerGap(241, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) tableMedicineList.getModel();
        dtm.setRowCount(0);

        for (InventoryItem inv : enterprise.getInventoryDirectoryEnterpriseLevel().getInventoryList()) {

            Object rowcount[] = new Object[3];
            rowcount[0] = inv.getMedicine();
            rowcount[1] = inv.getMedicine().getQuantity();
            rowcount[2] = inv.getMedicine().getExpiryDate();
            dtm.addRow(rowcount);

        }

    }
    private void orderMedTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderMedTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderMedTxtActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSearchMedicinesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchMedicinesActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnSearchMedicinesActionPerformed

    private void textQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textQtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textQtyActionPerformed

    private void orderMedBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderMedBtnActionPerformed
        // TODO add your handling code here:

        int row = tableMedicineList.getSelectedRow();

        if (row < 0) {
            JOptionPane.showMessageDialog(null, "please select a row");
        }

        int q = Integer.parseInt(orderMedTxt.getText());
        if (orderMedTxt.getText().equals("") || orderMedTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Quantity cannot be blank");
            return;
        }
        Validation va = new Validation();
        boolean a = va.regexAgeCheck(orderMedTxt.getText());
        if (!a) {
            JOptionPane.showMessageDialog(null, "Please enter integers value only");
            return;
        } else {

//        System.out.println(q);
            Medicine med = (Medicine) tableMedicineList.getValueAt(row, 0);

            int i = med.getQuantity();

//        System.out.println(i);
            int ans = i - q;
            if (ans >= i) {
                JOptionPane.showMessageDialog(null, "Required Quanity cannt be greater than Original Quantity");
                return;
            } else {

                med.setQuantity(ans);

                populateTable();

                JOptionPane.showMessageDialog(null, "You have ordered  " + q + "  medicines");
                return;
            }
        }
    }//GEN-LAST:event_orderMedBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton orderMedBtn;
    private javax.swing.JTextField orderMedTxt;
    private javax.swing.JTable tableMedicineList;
    // End of variables declaration//GEN-END:variables
}
