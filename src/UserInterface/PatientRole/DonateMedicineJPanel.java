/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.PatientRole;

import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Medicine.Medicine;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.Validation.Validation;
import Business.WorkQueue.NGODonationRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Shah
 */
public class DonateMedicineJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DonateMedicineJPanel
     */
    private JPanel container;
    private Enterprise enterprise;
    private Network network;
    private UserAccount userAccount;
    private Organization organization;

    public DonateMedicineJPanel(JPanel container, Enterprise enterprise, UserAccount userAccount, Network network, Organization organization) {
        initComponents();
        this.container = container;
        this.enterprise = enterprise;
        this.network = network;
        this.userAccount = userAccount;
        this.organization = organization;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        comboDoctorPrescribed = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        textMedicineName = new javax.swing.JTextField();
        textQuantity = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        dateChooser12 = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        txtComments = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtDisease = new javax.swing.JTextField();
        txtBrand = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel3.setText("Donate Medicine");

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel4.setText("Donation Status");

        jLabel6.setText("Doctor Prescribed :");

        btnSubmit.setText("Donate Medicine");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        comboDoctorPrescribed.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "No" }));

        jLabel2.setText("Medicine Name :");

        jLabel5.setText("Quantity :");

        jLabel7.setText("Expiry Date :");

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine Name", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        jLabel8.setText("Comments :");

        jLabel9.setText("Medical Condition :");

        jLabel10.setText("Brand : ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6))
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(textMedicineName)
                                    .addComponent(textQuantity)
                                    .addComponent(dateChooser12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboDoctorPrescribed, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(49, 49, 49)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel8))
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtComments)
                                    .addComponent(txtBrand)
                                    .addComponent(txtDisease, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(89, 89, 89)
                                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(262, 262, 262)
                                .addComponent(jLabel4))
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(453, 453, 453)
                        .addComponent(jLabel3)))
                .addContainerGap(288, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(btnBack)
                .addGap(22, 22, 22)
                .addComponent(jLabel3)
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(textMedicineName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5))
                    .addComponent(textQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(txtDisease, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10))
                    .addComponent(txtBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(24, 24, 24)
                        .addComponent(jLabel6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateChooser12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel8)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboDoctorPrescribed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtComments, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSubmit)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(90, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:

        try {
            String medicineName = textMedicineName.getText();
            String medicalCondition = txtDisease.getText();
            String brand = txtBrand.getText();
            String comment = txtComments.getText();
            java.util.Date expiryDate = dateChooser12.getDate();
            Date curdate = new Date();
            String quantity = textQuantity.getText();
            String prescribed = (String) comboDoctorPrescribed.getSelectedItem();

            if (medicineName.equals("") || medicineName.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please Enter Medicine Name");
                return;
            }
            if (quantity.equals("") || quantity.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please Enter Medicine Quantity");
                return;
            }
            if (medicalCondition.equals("") || medicalCondition.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please Enter Medicine Condition");
                return;
            }
            if (brand.equals("") || brand.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Please Enter Medicine Brand");
                return;
            }

            if (expiryDate.before(curdate)) {
                JOptionPane.showMessageDialog(null, "Please enter the validdate ");
            } else {
                Validation v = new Validation();
                boolean a = v.regexMedicineName(medicineName);
                boolean b = v.regexMedicineQty(quantity);
                boolean c = v.regexTextCheck(medicalCondition);
                boolean d = v.regexTextCheck(brand);

                if (!a) {
                    JOptionPane.showMessageDialog(null, "Medicine Name cannot be empty and enter Alphanumerically");
                    return;
                } else {
                    if (!b) {
                        JOptionPane.showMessageDialog(null, "Medicine Quantity cannot be empty and enter the value in 3 digit integers only");
                        return;
                    } else {
                        if (!c) {
                            JOptionPane.showMessageDialog(null, "Please enter Medicine condition Alphabetically");
                            return;
                        } else {
                            if (!d) {
                                JOptionPane.showMessageDialog(null, "Please Enter Brand Alphabetically");
                                return;
                            } else {

                                NGODonationRequest request = new NGODonationRequest();
                                System.out.println(enterprise + "------------enterprise");

                                Medicine medicine = new Medicine();
                                medicine.setMedicineName(medicineName);
                                medicine.setExpiryDate(expiryDate);
                                medicine.setPrescribed(prescribed);
                                medicine.setQuantity(Integer.parseInt(quantity));
                                medicine.setDisease(medicalCondition);
                                medicine.setComment(comment);
                                medicine.setMedicineManufacturerName(brand);
                                request.setMedicine(medicine);
                                System.out.println("med name" + request.getMedicine().getMedicineName());
                                request.setSender(userAccount);
                                request.setStatus("Sent");
                                System.out.println("sender name" + request.getSender());
                                Enterprise enterp = null;
                                System.out.println(network + "-------------network");
                                for (Enterprise ent : network.getEnterpriseDirectory().getEnterpriseList()) {
                                    System.out.println(ent.getEnterpriseType().getValue() + "<-------here");
                                    if (ent.getEnterpriseType().getValue().equals("Hospital Enterprise") && ent instanceof HospitalEnterprise) {
                                        enterp = ent;
                                        break;
                                    }
                                }
                                if (enterp != null) {
                                    enterp.getWorkQueue().getWorkRequestList().add(request);
//            organization.getWorkQueue().addRequest(request);
                                    userAccount.getWorkQueue().getWorkRequestList().add(request);
                                    System.out.println("here");
                                    populateTable();
                                }
                            }
                        }
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please enter all the fields correctly and fields cannot be empty");
        }
    }//GEN-LAST:event_btnSubmitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> comboDoctorPrescribed;
    private com.toedter.calendar.JDateChooser dateChooser12;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField textMedicineName;
    private javax.swing.JTextField textQuantity;
    private javax.swing.JTextField txtBrand;
    private javax.swing.JTextField txtComments;
    private javax.swing.JTextField txtDisease;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
            if (request instanceof NGODonationRequest) {
                Object[] row = new Object[2];
                System.out.print(request.getMedicine() + "----------this");
                row[0] = (request.getMedicine()).getMedicineName();
                row[1] = request.getStatus();
//            String result = ((LabTestWorkRequest) request).getTestResult();
//            row[3] = result == null ? "WaiLabTestWorkRequest) request).getTestResult();
//            row[3] = result == nullting" : result;
                model.addRow(row);
            }
        }
    }
}
