/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Pharmacy;

import Business.Enterprise.Enterprise;
import Business.Inventory.InventoryItem;
import Business.Medicine.Medicine;
import Business.Medicine.MedicineDirectory;
import Business.Network.Network;
import Business.UserAccount.UserAccount;
import UserInterface.MainJFrame;
import java.awt.CardLayout;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NIKUNJ
 */
public class PharmacyInventoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PharmacyInventoryJPanel
     */   
        // nikunj singh 4/12

  
    private JPanel container;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private  Network network;

    public PharmacyInventoryJPanel(JPanel container, Enterprise enterprise, UserAccount userAccount, Network network) throws ParseException {
         initComponents();
         this.container=container;
         this.enterprise=enterprise;
         this.userAccount=userAccount;
         this.network=network;
                     
         createCsv();
         populatePhaInv();
         
                                 
    }
    
    public void populatePhaInv() {
          DefaultTableModel dtm = (DefaultTableModel) PharmacyInventoryTable.getModel();
        dtm.setRowCount(0);
//        
//        for (Medicine medicine : enterprise.getMedicineList().getMedicineList()) {
//            Object rowcount[] = new Object[3];
//            rowcount[0] = medicine.getMedicineName();
//            rowcount[1] = medicine.getQuantity();
//            rowcount[2] = medicine.getExpiryDate();
//
//            dtm.addRow(rowcount);
//
//        }


        for(InventoryItem inv: enterprise.getInventoryDirectoryEnterpriseLevel().getInventoryList()){
            
            Object rowcount[] = new Object[3];
            rowcount[0] = inv.getMedicine().getMedicineName();
            rowcount[1] = inv.getMedicine().getQuantity();
            rowcount[2] = inv.getMedicine().getExpiryDate();

            dtm.addRow(rowcount);
            
        }
        
        
        // Nikunj 7/12
        
    }
    
     private void createCsv() throws ParseException  {
        String csv = "src/MedicineList.csv";
        BufferedReader br = null;
        String line = "";
        String split = ",";
        ArrayList<Medicine> data = new ArrayList<>();
        try {
            br = new BufferedReader(new FileReader(csv));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            while ((line = br.readLine()) != null) {
                String[] medicine = line.split(split);
                Medicine medicineobj = new Medicine();
                medicineobj.setMedicineName(medicine[0]);
                medicineobj.setQuantity(Integer.parseInt(medicine[1]));
                
                SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                Date date = (Date) dateFormat.parse(medicine[2]);
                
               
                medicineobj.setExpiryDate(date);
                
                
                
                data.add(medicineobj);
                
                
                enterprise.getMedicineList().setMedicineList(data);
                
               enterprise.getInventoryDirectoryEnterpriseLevel().addInventoryItemPharmacy(enterprise, userAccount, medicineobj, medicineobj.getQuantity());
                    
                    
        
            }
            
        } catch (IOException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        populatePhaInv();

    }
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        PharmacyInventoryTable = new javax.swing.JTable();
        viewdetails = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        txtBackButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        PharmacyInventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine", "Quantity", "Expiry"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(PharmacyInventoryTable);

        viewdetails.setText("View Details");

        jButton2.setText("Search");

        txtBackButton.setText("<< Back");
        txtBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBackButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setText("Manage Pharmacy Inventory");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(txtBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 621, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(viewdetails, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(341, 341, 341)
                        .addComponent(jLabel2)))
                .addContainerGap(261, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(txtBackButton)
                .addGap(41, 41, 41)
                .addComponent(jLabel2)
                .addGap(58, 58, 58)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewdetails)
                    .addComponent(jButton2)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(169, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

        // nikunj singh 4/12

    
    private void txtBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBackButtonActionPerformed
        // TODO add your handling code here:
      container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_txtBackButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable PharmacyInventoryTable;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton txtBackButton;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JButton viewdetails;
    // End of variables declaration//GEN-END:variables
}
